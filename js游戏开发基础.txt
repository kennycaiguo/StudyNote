第三章

number guessing game

<p id="output">I am thinking of a number between 0 and 99.</p> 
<input id="input" type="text" placeholder="Enter your guess..."> 
<button>guess</button>

var mysteryNumber=50;
var playerGuess=0;

var input=document.querySelector('#input'); 
var output=document.querySelector('#output');

var button=document.querySelector('button');
button.style.cursor='pointer';
button.addEventListener('click',clickHandler,false);

function clickHandler()
{
	playGame();
}

function playGame()
{
	playersGuess=parseInt(input.value);

	if(playerGuess>mysteryNumber)
	{
		output.innerHTML="That's too high";
	}
	else if(playerGuess<mysteryNumber)
	{
		output.innerHTML="That's too low";
	}
	else if(playerGuess==mysteryNumber)
	{
		output.innerHTML="You got it";
	}
}

作者解释道：clickHandler这个函数只做了一件事情就是调用playGame这个函数，那么为什么我们不直接把playGame这个函数里面的代码直接扔进clickHandler这个函数里面呢？这样做是为了接下来进一步扩展这个游戏时能保证一定的灵活性，比如，你可能想通过键盘触发playGame这个函数。通过将给按钮的事件分离开来，在后期你的程序就会更灵活而增强可维护性。

利用函数将独立的功能分成小的模块，这叫模块化。如果你将你的程序通过这种方法来划分模块，那么后期的扩展、维护就会非常方便

限制玩家猜的次数
var mysteryNumber=50;
var playerGuess=0;
var guessesMade=10;
var guessesMade=0;
var gameState="";

function playGame()
{
	guessRemaining--;
	guessesMade++;
	gameState="Guess:"+guessesMade+",Remaining:"+guessesRemaining;

	playerGuess=parseInt(input.value);
	if(playerGuess>mysteryNumber)
	{
		output.innerHTML="That's too high."+gameState;
	}
	else if(playerGuess<mysteryNumber)
	{
		output.innerHTML="That's too low.";+gameState;
	}
	else
	{
		output.innerHTML="You got it!";
	}
}

显示成功或者失败的标志gameWon

var mysteryNumber=50;
var playerGuess=0;
var guessesRemaining=10;
var guessesMade=0;
var gameState="";
var gameWon=false;//初始值为false代表没有赢

function playGame()
{
	guessesRemaining--;
	guessesMade++;
	gameState="Guess"+guessesMade+",Remaining:"+guessesRemaining;

	playerGuess=parseInt(input.value);
	if(playerGuess>mysteryNumber)
	{
		output.innerHTML="That's too high."+gameState;
		if(guessesRemaining<1)
		{
			endGame();
		}
	}
	else if(playerGuess<mysteryNumber)
	{
		output.innerHTML="That's too low"+gameState;
		if(guessesRemaining<1)
		{
			endGame();
		}
	}
	else if(playersGuess===mysteryNumber)
	{
		gameWon=true;
		endGame();
	}
}

function endGame()
{
	if(gameWon)
	{
		output.innerHTML="Yes,it's "+mysteryNumber+"!"+"<br/>"+"It only took you "+guessesMade+"guesses";
	}
	else
	{
		output.innerHTML="No more guesses left!"+"<br/>"+"The number was: "+mysteryNumber+".";
	}
}

//限制玩家只能输入数字
在clickHandler函数里面作如下改变
function clickHandler()
{
	validateInput();
}

//再定义一个validateInput函数
function validateInput()
{
	playerGuess=parseInt(input.value);
	if(isNaN(playerGuess))
	{
		output.innerHTML="Please enter a number:";
	}
	else
	{
		playGame();
	}
}
将playGame里面的playerGuess=parseInt(input.value);去掉

//通过enter键来输入数字
window.keydownHandler("keydown",keydownHandler,false);

function keydownHandler(event)
{
	var oEvent=ev||event;
	if(oEvent.keyCode==13)
	{
		validateInput();
	}
}

UI增强
//自动聚焦到数字输入框

<input type="text" id="input" placeholder="Enter your guess..." autofocus>

//游戏结束的时候让数字输入框、按钮、enter键不可用
function endGame()
{
	if(gameWon)
	{
		output.innerHTML="Yes, it's " + mysteryNumber + "!" + "<br>" + "It only took you " + guessesMade + " guesses.";
	}
	else 
	{ 
		output.innerHTML = "No more guesses left!" + "<br>" + "The number was: " + mysteryNumber + ".";
	}
	//Disable the button
	button.removeEventListener('click',clickHanlder,false);
	button.disabled=false;

	//Disable the enter key
	window.removeEventListener('keydown',keydownHandler,false);

	//Disable the input field
	input.disabled=true;
}

//随机猜测的数字
var mysteryNumber=Math.floor(Math.random()*100);


//完整的游戏代码

<p id="output">I am thinking of a number between 0 and 99.</p>
<input id="input" type="text" placeholder="Enter your guess..." autofocus>
<button>guess</button>

<script>
var mysteryNumber=Math.floor(Math.random()*100);
var playerGuess=0;

var guessesRemaining=10;
var guessesMade=0;
var gameState="";
var gameWon=false;

var button=document.querySelector("button");
button.addEventListener('click',clickHandler,false);
button.style.cursor="pointer";

window.addEventListener('keydown',keydownHandler,false);

function keydownHandler(ev)
{
	var oEvent=ev||event;
	if(oEvent.keyCode==13)
	{
		validateInput();
	}
}

function clickHandler()
{
	validateInput();
}

function validateInput()
{
	playersGuess=parseInt(input.value);

	if(isNaN(playersGuess))
	{
		output.innerHTML="Please enter a number.";
	}
	else
	{
		playGame();
	}
}

function playGame()
{
	guessesRemaining--;
	guessesMade++;
	gameState="Guess:"+guessesMade+",Remaining:"+guessingRemaining;

	playerGuess=parseInt(input.value);

	if(playerGuess>mysteryNumber)
	{
		output.innerHTML="That's too high."+gameState;
		if(guessesRemaining<1)
		{
			endGame();
		}
	}
	else if(playerGuess<mysteryNumber)
	{
		output.innerHTML="That's too low."+gameState;
		if(guessesRemaining<1)
		{
			endGame();
		}
	}
	else if(playerGuess==mysteryNumber)
	{
		gameWon=true;
		endGame();
	}
}

function endGame()
{
	if(gameWon)
	{
		output.innerHTML="Yes,it's "+mysteryNumber+"!"+"<br/>"+"It only took you "+guessesMade+" guesses.";
	}
	else
	{
		output.innerHTML="No more guesses left!"+"<br/>"+"It only took you "+guessesMade+"guesses.";
	}

	button.removeEventListener("click",clickHandler,false);
	button.disabled=true;

	window.removeEventListener("keydown",keydownHandler,false);

	input.disabled=true;
}
</script>

//游戏页面UI进一步增强

html
<div id="stage">
	<div id="scale"></div>
	<div id="arrow"></div>
</div>
<p id="output">I am thinking of a number between 0 and 99.</p>
<input id="input" type="text" placeholder="Enter your guess..." autofocus>
<button>guess</button>

CSS
#stage{ width:300px; height:33px; position:relative;}
#scale{ width:300px; height:33px; position:absolute; top:0; left:0; background-image:url(../images/scale.png);}
#arrow{ width:17px; height:22px; position:absolute; top:0; left:0; background-image:url(../images/arrow.png); transition:left 0.5s ease-out 0s;}


<script>
var mysteryNumber=Math.floor(Math.random()*100);
var playerGuess=0;

var guessesRemaining=10;
var guessesMade=0;
var gameState="";
var gameWon=false;

var input=document.querySelector("#input");
var output=document.querySelector("#output");

var button=document.querySelector("button");
button.addEventListener('click',clickHandler,false);
button.style.cursor="pointer";

var arrow=document.querySelector("#arrow");

window.addEventListener('keydown',keydownHandler,false);

function render()
{
	arrow.style.left=playersGuess*3+"px";
}

function keydownHandler(ev)
{
	var oEvent=ev||event;
	if(oEvent.keyCode==13)
	{
		validateInput();
	}
}

function clickHandler()
{
	validateInput();
}

function validateInput()
{
	playersGuess=parseInt(input.value);

	if(isNaN(playersGuess))
	{
		output.innerHTML="Please enter a number.";
	}
	else
	{
		playGame();
	}
}

function playGame()
{
	guessesRemaining--;
	guessesMade++;
	gameState="Guess:"+guessesMade+",Remaining:"+guessingRemaining;

	playerGuess=parseInt(input.value);

	if(playerGuess>mysteryNumber)
	{
		output.innerHTML="That's too high."+gameState;
		if(guessesRemaining<1)
		{
			endGame();
		}
	}
	else if(playerGuess<mysteryNumber)
	{
		output.innerHTML="That's too low."+gameState;
		if(guessesRemaining<1)
		{
			endGame();
		}
	}
	else if(playerGuess==mysteryNumber)
	{
		gameWon=true;
		endGame();
	}
	render();
}

function endGame()
{
	if(gameWon)
	{
		output.innerHTML="Yes,it's "+mysteryNumber+"!"+"<br/>"+"It only took you "+guessesMade+" guesses.";
	}
	else
	{
		output.innerHTML="No more guesses left!"+"<br/>"+"It only took you "+guessesMade+"guesses.";
	}

	button.removeEventListener("click",clickHandler,false);
	button.disabled=true;

	window.removeEventListener("keydown",keydownHandler,false);

	input.disabled=true;
}
</script>

//Alien Attack游戏

html
//内层四个div的顺序极为关键
<div id="stage">
	<div id="background"></div>
	<div id="cannon"></div>
	<div id="missile"></div>
	<div id="alien"></div>
</div>

<p id="output">Enter the X and Y position (0-300),then click fire.</p>
<input id="inputX" type="text" placeholder="X...">
<input id="inputY" type="text" placeholder="Y...">
<button>fire!</button>

css
#stage{ width:300px; height:300px; position:relative;}
#background{ width:100%; height:100%; position:absolute; top:0; left:0; background-image:url(../images/background.png);}
#cannon{ width:20px; height:20px; position:absolute; top:270px; left:140px; background-image:url(../images/cannon.png);}
#alien{ width:20px; height:20px; position:absolute; top:20px; left:80px; background:url(../images/background.png);}
#missile{ width:10px; height:10px; position:absolute; top:240px; left:145px; background-image:url(../images/missile.png);}

js
var alienX=80;
var alienY=20;
var guessX=0;
var guessY=0;
var shotsRemaining=8;
var shotsMade=0;
var gameState="";
var gameWon=false;

var cannon=document.querySelector('#cannon');
var alien=document.querySelector('#alien');
var missile=document.querySelector('#missle');

var button=document.querySeletor('button');
button.style.cursor='pointer';
button.addEventListener('click',clickHandler,false);


function playGame()
{
	shotsRemaining--;
	shotsMade++;
	gameState="Shots:"+shotsMade+", Remaining:"+shotsRemaining;

	guessX=parseInt(inputX.value);
	guessY=parseInt(inputY.value);

	if(guessX>=alienX&&guessX<alienX+20)
	{
		if(guessY>=alienY&&guessY<=alienY+20)
		{
			gameWon=true;
			endGame();
		}
	}

	if(!gameWon)
	{
		alienX=Math.floor(Math.random()*280);
		alienY+=30;
	}

	render();
}

function render()
{
	alien.style.left=alienX+'px';
	alien.style.top=alienY+'px';

	cannon.style.left=guessX+'px';

	missile.style.left=guessX+'px';
	missile.style.top=guessY+'px';
}

function validateInput()
{
	guessX=parseInt(inputX.value);
	guessY=parseInt(inputY.value);

	if(isNaN(guessX)||isNaN(guessY))
	{
		output.innerHTML="Please enter a number.";
	}
	else if(guessX>300||guessY>300)
	{
		output.innerHTML="Please enter a number less than 300";
	}
	else
	{
		playGame();
	}
}


//CSS代码加强
@font-face{ font-family:emulogic; src:url("../fonts/emulogic.ttf");}
*{ font-family:emulogic; padding:0; margin:0;}

#game{ margin:0 auto; width:330px; height:auto; padding:15px; border:black; background:linear-gradient(top,#588063,#000000); box-shadow:5px 5px 5px rgba(0,0,0,.5); border-radius:10px;}


//html
<section id="game">
	<h1>Alien attack!</h1>
	<div id="stage">
		<div id="background"></div>
		<div id="cannon"></div>
		<div id="missile"></div>
		<div id="alien"></div>
		<div id="explosion"></div>
	</div>

	<p id="output">Enter the X and position(0-300),then click fire.</p>
	<input id="inputX" type="text" placeholder="X..." autofocus></input>
	<input id="inputY" type="text" placeholder="Y..." autofocus></input>
	<button>fire!</button>
</section>


//The Forest of Lyrica

//html
<p id="output"></p>

//js
var map=[];
map[0]="An old stone keep.";
map[1]="A deep well.";
map[2]="A sunny glade.";
map[3]="A sleeping dragon.";
map[4]="A narrow pathway.";
map[5]="An ancient gate.";
map[6]="The edge of a river.";
map[7]="A lonely wooden bench.";
map[8]="An isolated cottage.Faint music comes from inside.";

//以第四个A narrow pathway启动游戏
var mapLocation=4;

var output=document.querySelector('#output');
output.innerHTML=map[mapLocation];


//the second version:让场景运动起来
//html
<p id="output"></p>
<input id="input" type="text" placeholder="Enter your action...">
<button>enter</button>

//js
var map=[];
map[0]="An old stone keep.";
map[1]="A deep well.";
map[2]="A sunny glade.";
map[3]="A sleeping dragon.";
map[4]="A narrow pathway.";
map[5]="An ancient gate.";
map[6]="The edge of a river.";
map[7]="A lonely wooden bench.";
map[8]="An isolated cottage.Faint music comes from inside.";

var mapLocation=4;

var playersInput="";
var gameMessage="";
var actionsIKnow=["north","east","south","west"];
var action="";

var output=document.querySelector('#output');
var input=document.querySelector('#input');

var button=document.querySelector('button');
button.style.cursor='pointer';
button.addEventListener('click',clickHandler,false);

render();

function clickHandler()
{
	playGame();
}

function playGame()
{
	playersInput=input.value;
	playersInput=playersInput.toLowerCase();

	gameMessage="";
	action="";

	for(var i=0;i<actionsIKnow.length;i++)
	{
		if(playersInput.indexOf(actionsIKnow[i])!==-1)
		{
			action=actionsIKnow[i];
			console.log("player's action: "+action);
			break;
		}
	}

	switch(action)
	{
		case "north":
			mapLocation-=3;
			break;
		case "east":
			mapLocation+=1;
			break;
		case "south":
			mapLocation+=3;
			break;
		case "west":
			mapLocation-=1;
			break;
		default:
			gameMessage="I don't understand that.";
	}
	render();
}

function render()
{
	output.innerHTML=map[mapLocation];
	output.innerHTML+='<br><em>'+gameMessage+'</em>';
}


//3rd version

//html
<img src='' width='300' height='267'/>
<p id='output'></p>
<input id='input' type='text' placeholder='Enter your action...'>
<button>enter</button>



//js
var images=[];
images[0]='keep.png';
images[1]='well.png';
images[2]='glade.png';
images[3]='dragon.png';
images[4]='path.png';
images[5]='gate.png';
images[6]='river.png';
images[7]='bench.png';
images[8]='cottage.png';

var image=document.querySelector('img');

function render()
{
	output.innerHTML=map[location];
	image.src='../images/'+images[mapLocation];

	output.innerHTML+='<br><em>'+gameMessage+</em>
}

//4th version 防止过界

var blockPathMessages=[];
blockPathMessages[0]='It's too dangero
blockPathMessages[0]='It's too dangerous to move that way.';
blockPathMessages[1]='A mysterous force holds you back.';
blockPathMessages[2]='A tangle of thorns blocks you way.';
blockPathMessages[3]='You can't step over the dragon.';
blockPathMessages[4]='';
blockPathMessages[5]='The gate locks shut.';
blockPathMessages[6]='The river is too deep to cross.';
blockPathMessages[7]='The trees are too thick to pass.';
blockPathMessages[8]='You're too scared to go that way.';

switch(action)
{
	case 'north':
		if(mapLocation>=3)
		{
			mapLocation-=3;
		}
		else
		{
			gameMessage=blockPathMessages[mapLocation];
		}
		break;
	case 'east':
		if(mapLocation%3!=2)
		{
			mapLocation+=1;
		}
		else
		{
			gameMessage=blockPathMessages[mapLocation];
		}
		break;
	case 'south':
		if(mapLocation<6)
		{
			mapLocation+=3;
		}
		else
		{
			gameMessage=blockPathMessages[mapLocation];
		}
		break;
	case 'west':
		if(mapLocation%3!=0)
		{
			mapLocation-=1;
		}
		else
		{
			gameMessage=blockPathMessages[mapLocation];
		}
		break;
	default:
		gameMessage='I don't understand that';
}

//5th version
var items=['flute','stone','sword'];
var itemsLocations=[1,6,8];

function render()
{
	output.innerHTML=map[mapLocation];
	image.src='../images'+images[mapLocation];

	for(var i=0;i<items.length;i++)
	{
		if(mapLocation===itemLocations[i])
		{
			output.innerHTML+='<br>You see a <strong>'+items[i]+'</strong> here';
		}
	}

	output.innerHTML+='<br><em>'+gameMessage+'</em>';

	if(backpack.length!==0)
	{
		output.innerHTML+='<br>You are carrying:'+backpack.join(', ');
	}
}

//6th version
var backpack=[];//玩家得到的装备
var actionsIKnow=['north','east','south','west','take','use','drop'];
var action='';
var itemsIKnow=['flute','stone','sword'];
var item='';

第五章
Island Adventure
//css
#stage{ position:relative; width:384px; height:384px; background-image:url('../images/background.png');}
.cell{ display:block; position:absolute; width:64px; height:64px;}
p{ width:400px;}

//html
<div id='stage'></div>
<p id='output'></p>

//js
var stage=document.querySelector('#stage');
var output=document.querySelector('#output');

var map=
[
	[0,2,0,0,0,3],
	[0,0,0,1,0,0],
	[0,1,0,0,0,0],
	[0,0,0,0,2,0],
	[0,2,0,1,0,0],
];

var WATER=0;
var ISLAND=1;
var PIRATE=2;
var HOME=3;

var SIZE=64;

var ROWS=map.length;
var COLUMNS=map[0].length;

render();

function render()
{
	if(stage.hasChildNodes())
	{
		for(var i=0;i<ROWS*COLUMNS;i++)
		{
			stage.removeChild(stage.firstChild);
		}
	}

	for(var row=0;row<ROWS;row++)
	{
		for(var colum=0;column<COLUMNS;column++)
		{
			var cell=document.createElement('img');
			cell.setAttribute('class','cell');
			stage.appendChild(cell);
			switch(map[row][column])
			{
				case WATER:
					cell.src='../images/water.png';
					break;
				case ISLAND:
					cell.src='../images/island.png';
					break;
				case PIRATE:
					cell.src='../images/pirate.png';
					break;
				case HOME:
					cell.src='../images/home.png';
					break;
			}
			cell.style.top=row*SIZE+'px';
			cell.style.left=column*SIZE+'px';
		}
	}
}

//2nd version 让ship动起来

var map=
[
	[0,2,0,0,0,3],
	[0,0,0,1,0,0],
	[0,1,0,0,0,0],
	[0,0,0,0,2,0],
	[0,2,0,1,0,0],
];

var gameObjects=
[
	[0,0,0,0,0,0],
	[0,0,0,0,0,0],
	[0,0,0,0,0,0],
	[0,0,0,0,0,0],
	[0,0,0,0,0,0],
	[4,0,0,0,0,0],
];

var WATER=0;
var ISLAND=1;
var PIRATE=2;
var HOME=3;
var SHIP=4;

var shipRow;
var shipColum;

for(var row=0;row<ROWS;row++)
{
	for(var column=0;column<COLUMNS;column++)
	{
		if(gameObjects[row][column]===SHIP)
		{
			shipRow=row;
			shipColumn=column;
		}
	}
}

//完整的渲染代码
function render()
{
	for(var row=0;row<ROWS;row++)
	{
		for(var column=0;column<COLUNMS; column++)
		{
			var cell=document.createElement('img');
			cell.setAttribute('class','cell');
			stage.appendChild(cell);

			switch(map[row][column])
			{
				case WATER:
					cell.src='../images/water.png';
				break;
				case ISLAND:
					cell.src='../images/island.png';
				break;
				case PIRATE:
					cell.src='../images/pirate.png';
				break;
				case HOME:
					cell.src='../images/home.png';
				break;
			}
			switch(gameObject[row][column])
			{
				case SHIP:
				cell.src='../images/ship.png';
				break;
			}
			cell.style.top=row*SIZE+'px';
			cell.style.left=column*SIZE+'px';
		}
	}
}

//让船动起来

window.addEventListener('keydown',keydownHandler,false);

var LEFT=37;
var TOP=38;
var RIGHT=39;
var DOWN=40;
//定义这些常量的目的就是为了可读性

function keydownHandler(ev)
{
	var oEvent=ev||event;
	switch(oEvent.keyCode)
	{
		case LEFT:
			if(shipColumn>0)
			{	gameObjects[shipRow][shipColumn]=0;
				shipColumn--;
				gameObjects[shipRow][shipColumn]=SHIP;
			}
			break;
		case TOP:
			if(shipRow>0)
			{
				gameObjects[shipRow][shipColumn]=0;
				shipRow--;
				gameObjects[shipRow][shipColumn]=SHIP;
			}
			break;
		case RIGHT:
			if(shipColumn<COLUMN-1)
			{
				gameObjects[shipRow][shipColumn]=0;
				shipColumn++;
				gameObjects[shipRow][shipColumn]=SHIP;
			}
			break;
		case DOWN:
			if(shipRow<ROWS-1)
			{
				gameObjects[shipRow][shipColumn]=0;
				shipRow++;
				gameObjects[shipRow][shipColumn]=SHIP;
			}
			break;
	}
	render();
}

4th version 得到ship的位置

function keydownHandler(ev)
{
	var oEvent=ev||event;
	switch(oEvent.keyCode)
	{
		case LEFT:
			if(shipColumn>0)
			{	gameObjects[shipRow][shipColumn]=0;
				shipColumn--;
				gameObjects[shipRow][shipColumn]=SHIP;
			}
			break;
		case TOP:
			if(shipRow>0)
			{
				gameObjects[shipRow][shipColumn]=0;
				shipRow--;
				gameObjects[shipRow][shipColumn]=SHIP;
			}
			break;
		case RIGHT:
			if(shipColumn<COLUMN-1)
			{
				gameObjects[shipRow][shipColumn]=0;
				shipColumn++;
				gameObjects[shipRow][shipColumn]=SHIP;
			}
			break;
		case DOWN:
			if(shipRow<ROWS-1)
			{
				gameObjects[shipRow][shipColumn]=0;
				shipRow++;
				gameObjects[shipRow][shipColumn]=SHIP;
			}
			break;
	}
	//找到ship的位置
	switch(map[shipRow][shipColumn])
	{
		case WATER:
			gameMessage='You sail the open seas';
			break;
		case PIRATE:
			fight();
			break;
		case ISLAND:
			trade();
			break;
		case HOME:
			endGame();
			break;
	}
	render();
}
//we want to the player to be able to win gold from pirates,buy food from islands,and gain some experience when a task is accomplished;

var food=10;
var gold=10;
var experience=0;
var gameMessage='Use the arrow keys to find your way home';

//the player should lose a bit of food and gold each turn
food--;
if(food<=0||gold<=0)
{
	endGame();
}

function trade()
{
	var islandsFood=experience+gold;
	var cost=Math.ceil(Math.random()*islandsFood);

	if(gold>cost)
	{
		food+=islandsFood;
		gold-=cost;
		experience+=2;

		gameMessage='You buy '+islandsFood+' coconuts for '+cost+' gold pieces.';
	}
	else
	{
		experience+=1;
		gameMessage="You don't have enough gold to buy food.";
	}
}

function fight()
{
	var shipStrength=Math.ceil((food+gold)/2);

	var pirateStrength=Math.ceil(Math.random()*shipStrength*2);

	if(pirateStrength>shipStrength)
	{
		var stolenGold=Math.round(pirateStrength/2);
		gold-=stolenGold;

		experience+=1;

		gameMessage="You fight and LOSE "+stolenGold+" gold pieces. Ship's strength: "+shipStrength+" Pirate's strength: "+pirateStrength;
	}
	else
	{
		var pirateGold=Math.round(pirateStrength/2);
		gold+=pirateGold;

		experience+=2;

		gameMessage="You fight and WIN "+pirateGold+" gold pieces. Ship's strength: "+shipStrength+" Pirate's strength: "+pirateStrength;
	}
}


//游戏对象和动画
var monster={
	IMAGE:"monsterTileSheet.png",
	SIZE:128,
	COLUMNS:3,
	numberOfFrames:5,
	currentFrame:0,
	sourceX:0,
	sourceY:0,
	forward:true,
	HIDING:0,
	JUMPING:1,
	state:this.HIDING,
	waitTime:undefined,
	findWaitTime:function(){
		this.waitTime=Math.ceil(Math.random()*60);
	},
	updateAnimation:function(){
		if(this.waitTime>0||this.waitTime==undefined)
		{
			this.state=this.HIDING;
		}
		else
		{
			this.state=this.JUMPING;
		}

		switch(this.state)
		{
			case this.HIDING:
				this.currentFrame=0;
				this.waitTime--;
				break;
			case this.JUMPING:
				
		}
	},
};









第十一章 平台游戏以及物理学

