每台计算机的电子电路只能识别和直接执行有限的简单指令，例如做与或非运算
这些有限的简单的原始的指令构成了机器语言
原始指令的设计应该尽量简单，这样可以降低电路的成本和复杂度

第0层 数字逻辑层
第1层 微体系结构层 由8-32个寄存器组成的寄存器组和ALU的电路共同组成，也叫数据通路
数据通路的基本操作是选择1-2个寄存器，让ALU对它们进行操作，然后将结果存回某个寄存器
在一些机器上数据通路的操作是由一个叫做微程序的程序控制的，而在另外一些机器上是由硬件直接控制的
第2层 指令系统层 ISA层 由微程序或硬件电路直接执行
第3层 操作系统机器层 大多数指令和ISA层相同
第4层 汇编语言层 用汇编语言写的程序首先被翻译成第1 2 3层语言，然后由相应的虚拟机或硬件解释执行
完成翻译过程的程序称为汇编器
第5层 高级语言 由高级语言写的程序一般先由编译器翻译成第3 4层语言

CPU中控制器负责从主存中取指令和确定指令类型
ALU通过完成诸如加法、逻辑与运算来执行指令
CPU内部也有一定数量的小容量、高速度的存储器，用来存放中间结果和一些控制信息，作用是缓冲
CPU中最重要的寄存器是程序计数器，它指向下一条将被取出执行的指令。
同样重要的还有指令寄存器，存放当前正在被执行的指令

ALU对输入数据进行加减等简单运算，然后将产生的运算结果存入输出寄存器
经输出寄存器存回某个寄存器中，以后需要时还可以从寄存器写入到内存中

大多数指令可以分为寄存器-寄存器指令和寄存器-内存指令

ALU将两个操作数进行运算并将结果存回的过程称为数据通路周期，是大多数CPU的核心




