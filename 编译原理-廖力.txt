描述词法规则的有效工具是正规式和有限自动机

在词法分析的基础上，根据语言的语法规则，把单词符号组成各类的语法单位：短语、子句、语句、过程、程序

语法规则：规定单词如何构成短语、语句、过程、程序

语法规则的表示可以用巴斯特范式（BNF:）
A::=B|C 这个式子中的::=是“定义为”，所以这个定义就是A定义为B或C

赋值语句的语法规则：
A::=V=E
E::=T|E+T
T::=F|T*F
F::=V|(E)|C
V::=标识符
C::=常数

语法分析的方法：
推导和归约
最左归约和最右推导
A 推出 V=E
再推出 V=E+T
再推出 V=E+T*F
再推出 V=E+T*C
再推出 V=E+T*50
再推出 V=E+F*50
再推出 V=E+V*50
再推出 V=E+b*50
再推出 V=T+b*50
再推出 V=F+b*50
再推出 V=V+b*50
再推出 V=a+b*50
再推出 x=a+b*50


最左推导和最右归约
A 推出 V=E
再推出 x=E
再推出 x=E+T
再推出 x=T+T
再推出 x=F+T
再推出 x=V+T
再推出 x=a+T
再推出 x=a+T*F
再推出 x=a+F*F
再推出 x=a+V*F
再推出 x=a+b*F
再推出 x=a+b*C
再推出 x=a+b*50


中间代码生成：对语法分析识别出的各类语法范畴，分析其含义，进行初步翻译，产生介于源代码和目标代码之间的一种代码
分两阶段工作：
对每种语法范畴进行静态语义检查
若语义正确，就进行中间代码的翻译
中间代码的形式：
四元式 三元式 逆波兰式


优化：公共子表达式的提取、合并已知量、删除无用语句、循环优化

目标代码生成
绝对指令代码：可立即执行的目标代码
汇编指令代码
可重定位指令代码（obj文件）

通常用表格来记录源程序的各种信息以及编译过程中的各种状况
与编译前三阶段有关的表格有：
符号表 常数表 标号表 分程序入口表 中间代码表


符号表：
用来登记源程序中的常量名、变量名、数组名、过程名等，记录它们的性质、定义和引用情况


遍
遍与阶段没有关系
一遍扫描 多遍扫描
多遍扫描节省内存空间，提高目标代码的质量，使编译的逻辑结构更清晰，但编译时间较长


编译程序生成
1、直接用机器语言编写编译程序
2、用汇编语言编写编译程序
	编译程序的核心部分常用汇编语言编写
3、用高级语言编写编译程序
	这是普遍采用的方法
4、自编译
5、编译工具
	LEX（词法分析） YACC（用于自动产生LALR分析表）
6、移植
	同种语言的编译程序在不同类型的机器之间移植

编译程序的构造

====================================
第二章 编译基础知识
2.0 编译基础知识
程序语言是一个记号系统
语法
语义




