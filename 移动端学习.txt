对于iPhone5 官方给出的分辨率是1136*640 这个分辨率是指独立像素
	我们通过Emulation查看得到的是物理像素
	独立像素和物理像素之比就是像素比 在这里iPhone5的像素比是2

oBox.onclick=function(){
	alert("haha");
};

oBox.ontouchend=function(){
	alert("haha");//手指抬起的时候触发
};
//要通过事件监听器添加，不能通过ontouchend来加，要通过绑定来加
oBox.addEventListener("touch",function(){
	alert("haha");
},false);








<meta name="viewport" content="
	width=device-width,//由于直接像这样width:400写，大多数Android手机是不支持的，但iOS支持，所以通常写成device-width
	user-scalable=no,//是否允许用户进行双指操作来进行缩放，通常设为no
	initial-scale=1.0,//默认缩放比，通常写1.0
	minimum-scale=1.0,//允许最小缩放比例
	maximum-scale=1.0,//允许最大缩放比例
	target-densitydpi=device-dpi,//每英寸像素点个数
" />

//媒体查询

@media all and (min-width:400px)
{
	.box{width:400px; height:400px;}
}
all是媒体类型 其实指的就是我们的设备是iPad iWatch iPod iPhone等等，这里的值可以是
	all 所有媒体
	braille 盲文触觉设备
	embossed 盲文打印机
	print 手持设备
	projection 打印预览
	screen彩屏设备
	speech "听觉"类似的媒体类型
	tty 不适用像素的设备
	tv 电视
	一般来说都是写all
and是关键字
	and 表示连接
	not 排除 用的时候可以这样写 not tv 就是除了tv
	only 只有 例如only tv就是只针对tv设置样式
(min-width:400px)是媒体特性
	orientation:portrait 竖屏
	orientation:landscape 横屏
	
========================================妙味移动端最新视频=========================================
移动端开发深度解密
<meta name="viewport" content="">
viewport即视口，视口又叫可视区窗口，在移动端如果不设置viewport默认为980px
	在content中可以设置以下东西：
	width: 可视区宽度，通常可以设置为数字类型或者device-width device-width即设备宽度，但是某些Android手机对数字的支持不好，因此我们通常设置为device-width
	user-scalable是否允许用户进行双指操作来进行缩放，通常设为no，但对于iOS10该项设置无效（需要通过js解决）
	initial-scale初始缩放比，通常写1.0
	minimum-scale=1.0,允许最小缩放比例
	maximum-scale=1.0,允许最大缩放比例
	iOS10对于maximum-scale不支持

像素比：像素比如果是n，就意味着把一个像素放大至n个像素去显示，对于iPhone5的页面，像素比是2，iPhone5的实际像素是1136x640，假如在css中设置一个div为100px 100px的尺寸，由于像素比是2，所以100px会被放大到200px显示，因此1136x640的实际像素只可以显示568x320的大小
每款手机都有像素比，而且各不相同

之所以有像素比这个概念，是因为手机屏非常小，但是分辨率（像素值）却非常大，按照pc的尺寸去显示的话就会非常小，假如我们有一张实际像素320x320的图片，不做任何设置放到手机中后会变虚，因为手机会按照像素比放大到原来的2倍，即放大成了640x640

做的时候至少要按照750px+的图来做

对于x5内核的浏览器，禁止横屏 QQ 微信等腾讯系列的浏览器都是x5内核的浏览器 landscape是横屏选项
<meta name="x5-orientation" content="portrait" />
对于x5内核的浏览器，禁止切换到全屏
<meta name="x5-fullscreen" content="true" />
对于UC浏览器，禁止横屏
<meta name="screen-orientation" content="portrait" />
对于UC浏览器，禁止切换到全屏
<meta name="full-screen" content="yes" />
但除了这两个浏览器（比如像苹果内置的Safari 安卓内置的浏览器）都不能禁止全屏 禁止横屏，如需禁止只能通过后期我们讲到的陀螺仪来解决

禁止识别电话号码和邮箱
<meta name="format-detection" content="telephone=no,email=no" />

对于需要识别的情况，可以：
<a href="tel:13511111111">拨打电话13511111111</a>
<a href="mailto:xxx@xxx.com">xxx@xxx.com</a>

点击高亮样式的设置
a,input,button{ -webkit-tap-highlight-color: rgba(255, 0, 0, .5);}

清除iOS中input button默认的圆角，不过加了下面这条样式之后还是略微会有圆角
input,button{ -webkit-appearance: none;}
配合border-radius: 0;就可以彻底清除圆角
input,button{ -webkit-appearance: none; border-radius: 0;}
注意：仅使用border-radius: 0是不可以的

移动端每一台设备的默认字体都不太一样，通常会设置成Helvetica;
body{font-family: Helvetica;}

禁止文字缩放：body *{-webkit-text-size-adjust: 100%} 加了该样式之后禁止用户在浏览器中设置大号、中号、小号字体显示，也禁止了用户在横竖屏切换时字体有可能发生的变化

禁止移动端长摁文字选中：body *{-webkit-user-select: none;} 这种方式在iOS下还可以，在Android中效果不好，在事件章节我们会讨论

Font-boosting：在一段文字我们没有给它设置高度的时候再webkit内核下文字被浏览器放大了，解决时可以给文字设置height或max-height

iOS某些版本和Android很多都不兼容fixed固定定位，会出现非常卡顿的现象，这个问题需要在后期事件讲解中解决

iOS下body里面的元素宽度设置超过100%时，给body设置overflow:hidden;不管用，此时通常会在最外面包一层，设置overflow:auto;

(function(){
	var w = window.screen.width;
	var targetW = 320; //希望在点击审查元素的时候宽度为320
	var scale = w/targetW;
	var meta = document.createElement("meta");
	meta.name = "viewport";
	meta.content = "user-scalable=no,initial-scale=" + scale + "minimum-scale=" + scale + ",maximum-scale=" + scale;
	document.appendChild(meta);
})();



(function(){
	var html = document.documentElement;
	var hWidth = html.getBoundingClient().width;
	// 除以16代表16rem的宽度就是整个屏幕的宽度
	// 假如设计图是640px宽的，则1rem就相当于640/16 = 40px;
	// 即量到40px时其实应该是1rem，量到60px时其实应该是1.5rem
	// 这样一来每次量出的像素值都要除以40，计算起来比较麻烦
	// 可以引入less，顶部定义@r:40rem;后面可以写成width: 60/@r;然后再用编译器编译即可
	html.style.fontSize = hWidth / 16 + "px";
})();

// 弹性盒模型
<div id="box">
	<div></div>
	<div></div>
	<div></div>
</div>
// 加上display: flex; margin: auto;这两条样式之后#box里面的div会水平平均排布
#box{ width: 100%; height: 200px; display: flex;}
#box div{ width: 50px; height: 50px; margin: auto;}

display: flex;是新版弹性盒模型，但是在某些手机机型上不兼容

老版的弹性盒模型在手机上表现比较好，老版弹性盒模型即必须要给父级加上display: inline-box;或display: box;

仅给#box父级增加display: box;是没有效果的，必须要加上浏览器内核前缀display: -webkit-box;这样修正之后表现才会跟display: flex;效果一样

