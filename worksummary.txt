1、表单校验插件封装问题
2、商品列表页多条件筛选问题，将问题往对象、数组的思路转化
3、后台管理系统商品列表页分页插件封装需要生成真数据，修改后台文件
4、砍价应用弹框，关闭按钮在安卓手机中点多次才生效
5、微信小应用，iPhone中不关闭软键盘在多个输入框之间切换时onChange事件不会触发
6、微信小应用，自己模拟底部导航，高亮状态选中实现不同思路对于后期产品详情页不选中任何一个按钮的影响
7、超能访客，安卓原生弹框和js弹框同时弹出来，导致程序运行异常
8、省市区三级联动返回json格式和html片段的区别、树形菜单数据结构的生成放到服务端，节省性能了吗？
9、将call和apply看为函数对象的方法
10、修改discuz样式，分析整个discuz框架执行的流程
11、Safari浏览器下首页某个js文件需要30s左右才可以加载完成，seajs编译编译过慢
12、微信小程序客户端支付由于没有数据传递没有请求，纯客户端在交互，所以没有安全问题


面向对象的理解：
利用表单校验类做类比
继承要从ES3 ES5 ES6依次说明


关于服务器端渲染对于SEO影响的进一步考虑，可以研究一下爬虫内部的搜索算法，如果爬虫算法是匹配html中<h1>xxx</h1>这样做的，可以把这部分放在jsx中


关于XHR2支持二进制数据传输的进一步考虑


前端工程化


2017的主要任务：汇编语言 操作系统 计算机网络
为什么学习操作系统、计算机网络？
计算机网络：日常工作中经常在外网、内网之间切换，经常开虚拟机测试，经常登录远程服务器调试，HTTP请求的具体过程，TCP三次握手建立连接和ajax以及websocket内部具体运行的机制如何，和运维打交道时会有一系列的网络术语，因此非常需要学习
操作系统：以上的案例已经证明了操作系统有多重要的了不必多说，此外操作系统和编译原理有着极为紧密的关系


2018的主要任务：算法、编译、进一步巩固c++和Java
编译：前端框架内部无处不在用编译，但也仅仅用到了编译的前端部分，编译的精华在于后端：优化，优化部分又包括平台相关优化（物理上的优化）、平台无关优化（逻辑上的优化），除此之外浏览器处理各个node节点时建立的dom内存模型是什么样的
算法：遇到一个问题，为何有的人反应非常快，能很清晰的想到一个解决方案，而有的人想不出来，到底差距在哪儿？差在软实力，算法就是一个程序员的软实力、基本功


日常：数学、英语、阅读、历史、社会基础
研究这些的原因：看待一个问题的深度和广度不一样，内心的思考以及做出的行动也不一样，例如前端在工作中遇到某个问题在解决时，仅仅站在前端的角度考虑可能是一种解决方案，站在前后台交互的角度看可能又不一样，站在整个项目来看可能又不一样，站在整个产品体系架构来看又不一样，最后采用什么样的解决方案取决于看待问题的角度和站在什么样的高度，站的越高才看得越远，更何况想要跟公司里那么多人合作开发一定要彼此互相了解对方才可以


有了以上知识作为基础之后可以看一些综合性较强的书籍，例如：
赵炯0.xLinux内核源码注释
APUE
CSAPP
TCP/IP详解卷II
操作系统设计与实现